name: Build docker image and deploy to prod

concurrency:
  group: production
  cancel-in-progress: true

on:
  push:
    tags: [ "**" ]

env:
  WORKDIR: /root/projects/chatGptBot

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ vars.DOCKER_IMAGE_NAME }}:latest,${{ vars.DOCKER_IMAGE_NAME }}:${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: get docker image
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          key: ${{ secrets.PROD_KEY }}
          port: 22
          script: |
            docker pull docker.io/${{ vars.DOCKER_IMAGE_NAME }}:latest &&
            cd ${{ env.WORKDIR }} &&
            docker compose down

      - name: copy docker-compose
        uses: actions/checkout@v4
      - name: copy docker-compose.yml
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          port: 22
          key: ${{ secrets.PROD_KEY }}
          source: "./docker-compose.yml"
          target: ${{ env.WORKDIR }}
          overwrite: true

      - name: up updated container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          key: ${{ secrets.PROD_KEY }}
          port: 22
          script: |
            cd ${{ env.WORKDIR }} &&
            docker compose down &&
            docker compose up -d
