name: Build docker branch image

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ 'feature/**', 'hotfix/**']

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  env:
    env:
      TEST_ENV: $(echo $GITHUB_SHA | cut -c 1-8)
    runs-on: ubuntu-latest
    outputs:
      modified-branch-name: ${{ steps.env.outputs.MODIFIED_BRANCH_NAME }}
    steps:
      - name: Sets MODIFIED_BRANCH_NAME
        id: env
        env:
          name: "${{env.BRANCH_NAME}}"
        run: |
          echo "MODIFIED_BRANCH_NAME=${name/\//-}" >> ${GITHUB_OUTPUT}

  build:
    needs: [env]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set env
        run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-8)" >> $GITHUB_ENV
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ vars.DOCKER_IMAGE_NAME }}:${{ needs.env.outputs.modified-branch-name }},${{ vars.DOCKER_IMAGE_NAME }}:${{ github.workflow_sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  migrations-validate:
# TODO add master - branch migration test: 1. migrate on master container 2. migrate on branch container 3. check for errors
    needs: [build]
    runs-on: ubuntu-latest
    container:
      image: ${{ vars.DOCKER_IMAGE_NAME }}:${{ github.workflow_sha }}
      credentials:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      env:
        DATABASE_URL: jdbc:postgresql://db:5432/dev
        POSTGRES_USER: dev
        POSTGRES_PASSWORD: dev
    steps:
      - name: show PWD
        run: pwd
      - name: show dirs
        run: ls -lah
      - name: run migrations
        run: |
          cd /app &&
          ./gradlew flywayMigrate --warning-mode none &&
          ./gradlew flywayInfo --warning-mode none &&
          ./gradlew flywayValidate --warning-mode none

    services:
      db:
        image: postgres:15
        env:
          POSTGRES_DB: dev
          POSTGRES_USER: dev
          POSTGRES_PASSWORD: dev
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

  test:
    # TODO add master - branch migration test: 1. migrate on master container 2. migrate on branch container 3. check for errors
    needs: [build]
    runs-on: ubuntu-latest
    container:
      image: ${{ vars.DOCKER_IMAGE_NAME }}:${{ github.workflow_sha }}
      credentials:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      env:
        DATABASE_URL: jdbc:postgresql://db:5432/test
        POSTGRES_USER: dev
        POSTGRES_PASSWORD: dev
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        OPEN_AI_TOKEN: ${{ secrets.OPEN_AI_TOKEN }}
    steps:
      - name: run tests
        run: |
          cd /app &&
          env &&
          ./gradlew test --warning-mode none --stacktrace --console=plain
    services:
      db:
        image: postgres:15
        env:
          POSTGRES_DB: test
          POSTGRES_USER: dev
          POSTGRES_PASSWORD: dev
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
